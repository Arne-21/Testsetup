@startuml make_coffee
title Making Coffee - Activity Diagram

start
	:Get a clean cup;
	:Measure coffee grounds (or insert pod);
	:Fill kettle with water;
	if (Using coffee machine?) then (yes)
		:Turn on coffee machine;
		:Place pod/grounds in machine;
		:Start brew cycle;
	@startuml make_coffee_detailed
	title Making Coffee â€” Detailed Activity

	start
		:Get a clean cup;
		:Check kettle water level;
		if (Water low?) then (yes)
			:Fill kettle with water;
			:Confirm water level OK;
		else (no)
			:Water level OK;
		endif

		:Check for coffee supply;
		if (Pod available?) then (pod)
			:Use coffee pod;
		else (no pod)
			if (Grounds available?) then (grounds)
				:Use coffee grounds;
			else (none)
				:Prepare instant coffee (fallback);
			endif
		endif

		:Decide brew method;
		if (Using automatic machine?) then (yes)
			:Check machine power and water reservoir;
			if (Reservoir low?) then (yes)
				:Fill machine reservoir;
			else (no)
				:Reservoir OK;
			endif
			:Insert pod or add grounds to basket;
			if (Filter present?) then (yes)
				:Start brew on machine;
			else (no)
				:Insert/replace filter and then start brew;
			endif
		else (manual)
			if (Using French press?) then (fpress)
				:Add grounds to press;
				:Pour hot water;
				:Stir gently;
				:Wait (steep 3-4 min);
				:Press plunger down slowly;
			else (pour-over)
				:Place filter in dripper;
				:Add grounds to filter;
				:Pour hot water over grounds in stages;
			endif
		endif

		:Let coffee reach desired strength;
		:Remove used filter/pod and clean up;

		:Add milk and/or sugar if wanted;
		if (Want latte?) then (yes)
			:Froth milk and add to cup;
		else (no)
			:Serve as brewed;
		endif

	stop

	note right
		This diagram covers: pod machines, manual methods
		(French press, pour-over), and fallbacks (instant).
		You can extend it with timers and error handling.
	end note

	@enduml
